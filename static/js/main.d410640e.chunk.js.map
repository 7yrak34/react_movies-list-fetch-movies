{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","convertData","data","Title","Plot","Poster","concat","imdbID","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","foundMovie","setFoundMovie","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","showError","setShowError","handleAddMovie","useCallback","newMovie","some","_toConsumableArray","handleInputChange","event","target","value","handleFormSubmit","query","preventDefault","fetch","then","res","json","catch","Response","Error","finally","_Fragment","onSubmit","htmlFor","type","id","placeholder","classNames","onChange","disabled","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d410640e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3bbe4f15';\nconst BASE_MOVIE_URL = 'https://www.imdb.com/title';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport function convertData(data: MovieData): Movie {\n  return {\n    title: data.Title,\n    description: data.Plot,\n    imgUrl: data.Poster !== 'N/A'\n      ? data.Poster\n      : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n    imdbUrl: `${BASE_MOVIE_URL}/${data.imdbID}`,\n    imdbId: data.imdbID,\n  };\n}\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { convertData, getMovie } from '../../api';\n\ninterface Props {\n  movies: Movie[];\n  setMovies: (movies: Movie[]) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  const handleAddMovie = useCallback((newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies([...movies, newMovie]);\n    }\n\n    setInputValue('');\n    setFoundMovie(null);\n  }, [movies, setMovies]);\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (showError) {\n        setShowError(false);\n      }\n\n      setInputValue(event.target.value);\n    },\n    [showError],\n  );\n\n  const handleFormSubmit = useCallback(\n    (event: React.FormEvent) => {\n      event.preventDefault();\n      setIsLoading(true);\n      getMovie(inputValue)\n        .then((data) => {\n          if ('Error' in data) {\n            throw new Error();\n          }\n\n          return data;\n        })\n        .then(convertData)\n        .then(setFoundMovie)\n        .catch(() => {\n          setShowError(true);\n        })\n        .finally(() => setIsLoading(false));\n    },\n    [inputValue],\n  );\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': showError,\n              })}\n              value={inputValue}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {showError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!inputValue}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddMovie(foundMovie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {(foundMovie) && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}